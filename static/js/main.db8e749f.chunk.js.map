{"version":3,"sources":["components/Form.js","components/Result.js","components/App.js","reportWebVitals.js","index.js"],"names":["Form","props","onSubmit","submit","type","value","city","placeholder","onChange","change","Result","information","error","weather","temp","pressure","windSpeed","time","cityName","className","App","state","handleInputCity","event","setState","target","handleCitySubmit","preventDefault","API","fetch","then","response","ok","Error","json","info","currentTime","Date","dt","toLocaleString","name","id","main","wind","speed","setBackground","catch","code","console","log","window","location","origin","document","body","style","backgroundImage","this","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.db8e749f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Form = (props) => {\r\n    return (\r\n        <form onSubmit={props.submit}>\r\n            <input type=\"text\" value={props.city} placeholder={'city...'} onChange={props.change}/>\r\n            <button>Search</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Form;\r\n","import React from 'react';\r\n\r\nconst Result = (props) => {\r\n    const { city, weather, error, temp, pressure, windSpeed, time, cityName} = props.information;\r\n    let information = ''\r\n    if(!error && !cityName && city) {\r\n        information = (\r\n            <div>Press Button to search information about: <strong>{city}</strong></div>\r\n        )\r\n    }\r\n    else if (!error && city){\r\n        information = (\r\n            <>\r\n                <h2>City name: <em>{city}</em></h2>\r\n                <p>Temperature: <strong>{temp}</strong> &#176;C</p>\r\n                <p>Pressure: <strong>{pressure}</strong> hPa</p>\r\n                <p>Wind speed: <strong>{windSpeed}</strong> m/s</p>\r\n                <p>Current Time: <strong>{time}</strong></p>\r\n            </>\r\n        )\r\n    }\r\n    return (\r\n        <section  className=\"weather\">\r\n            {error ? <div>No information about <strong>{city}</strong></div> : information}\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default Result;\r\n","import React, {Component} from 'react';\nimport Form from './Form'\nimport Result from './Result'\nimport './App.css'\n\nclass App extends Component {\n  state = {\n    city: '',\n    weather: '',\n    error: '',\n    temp: '',\n    pressure: '',\n    windSpeed: '',\n    time: '',\n    cityName: ''\n  }\n\n  handleInputCity = (event) => {\n    this.setState({\n        city: event.target.value,\n        cityName: '',\n        error: false\n    })\n  }\n\n  handleCitySubmit = (event) => {\n    event.preventDefault()\n    const API = `https://api.openweathermap.org/data/2.5/weather?q=${this.state.city}&APPID=626cacd80c67ff2e669b867f568cc47d&units=metric`;\n    fetch(API)\n        .then(response => {\n          if(response.ok) return response\n          else throw new Error('Error occurred')\n        })\n        .then(response => response.json())\n        .then(info => {\n            const currentTime = new Date(info.dt * 1000).toLocaleString()\n          this.setState({\n            city: info.name,\n            weather: info.weather[0].id,\n            temp: info.main.temp,\n            pressure: info.main.pressure,\n            windSpeed: info.wind.speed,\n            time: currentTime,\n            cityName: this.state.city,\n            error: false\n          })\n            this.setBackground(this.state.weather);\n        })\n        .catch(error => {\n          this.setState({\n            error: true,\n          })\n        })\n  }\n    setBackground(code){\n        console.log(window.location.origin)\n      if (code<300) document.body.style.backgroundImage = \"url(200.webp)\";\n      else if (code<400) document.body.style.backgroundImage = 'url(300.webp)';\n      else if (code<500) document.body.style.backgroundImage = 'url(400.webp)';\n      else if (code<600) document.body.style.backgroundImage = 'url(500.webp)';\n      else if (code<700) document.body.style.backgroundImage = 'url(600.webp)';\n      else if (code<800) document.body.style.backgroundImage = 'url(700.webp)';\n      else if (code===800) document.body.style.backgroundImage = \"url(800.webp)\";\n      else if (code<900) document.body.style.backgroundImage = 'url(900.webp)';\n    }\n\n  render() {\n    return (\n        <div className=\"weatherApp\">\n          <Form city={this.state.city} change={this.handleInputCity} submit={this.handleCitySubmit}/>\n          <Result information={this.state}/>\n        </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}